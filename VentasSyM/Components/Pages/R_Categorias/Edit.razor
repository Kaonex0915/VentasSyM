@page "/Edit/Categorias"
@page "/Edit/Categorias/{CategoriaId:int}"
@rendermode InteractiveServer
@inject NavigationManager navigationManager
@inject CategoriaServices categoriaService

<EditForm Model="categorias" OnValidSubmit="Guardar" FormName="CategoriaForm">
    <DataAnnotationsValidator />
    <div class="card">

        <div class="card-header">
            <h1>Editar Categoria</h1>
        </div>

        <div class="card-body">

            <label>ID:</label>
            <div class="input-group">
                <InputNumber @bind-Value="categorias.CategoriaId" class="form-control"></InputNumber>
                <button type="button" class="btn btn-outline-primary oi oi-magnifying-glass" @onclick="Buscar"></button>
            </div>
            
            <div class="row">
                <div class="col-md-6">
                    <label>Nombre:</label>
                    <InputText @bind-Value="categorias.Nombre" class="form-control"></InputText>
                    <ValidationMessage For="@(() => categorias.Nombre)" />
                </div>
                
            </div>
        </div>

        <div class="card-footer d-flex justify-content-center">
            <button type="button" class="btn btn-outline-primary" @onclick="Nuevo">Nuevo <i class="oi oi-file" /></button>
            <button type="submit" class="btn btn-outline-success">Guardar <i class="bi bi-floppy mt-3" /></button>
            <a class="btn btn-outline-primary" href="/Index/Categorias/">
                <span class="bi bi-arrow-left mt-3"></span> Retroceder
            </a>
        </div>
    </div>
    
</EditForm>

@code {
    [Parameter]
    public int? CategoriaId { get; set; }
    public Categorias categorias { get; set; } = new Categorias();
    private bool Existe = false;

    protected override async Task OnInitializedAsync()
    {
        if (CategoriaId.HasValue)
        {
            categorias.CategoriaId = CategoriaId.Value;
            await Buscar();
        }
    }

    public async Task Buscar()
    {
        var categoriaEncontrada = await categoriaService.Buscar(categorias.CategoriaId);

        if (categoriaEncontrada != null)
        {
            categorias = categoriaEncontrada;
        }
    }


    public void Nuevo()
    {
        categorias = new Categorias();
        Existe = false;
    }

    public async Task Guardar()
    {
        var guardo = await categoriaService.Guardar(this.categorias);
        Nuevo();
    }
}