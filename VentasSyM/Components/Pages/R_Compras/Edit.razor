﻿@page "/Edit/{CompraId:int}"
@inject CompraServices compraService
@rendermode InteractiveServer
<Toasts class="p-3" AutoHide="true" Delay="4000" Placement="ToastsPlacement.TopRight" />

<EditForm Model="compras" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="card shadow-lg border-0 rounded" style="background-color: #f8f9fa;">
        <div class="card-header bg-primary text-white" style="text-align: center;">
            <h3> <i class="fas fa-clipboard-list"></i> Editar Compra</h3>
        </div>

        <div class="card-body">

            <div class="row">
                <div class="col-md-6 mb-3">
                    <label for="CompraId" class="form-label">CompraId:</label>
                    <div class="input-group">
                        <div class=" sizeid">
                            <InputNumber @bind-Value="compras.CompraId" class="form-control" style="font-size: 0.8em;" aria-describedby="BotonBuscar" />
                        </div>
                    </div>
                </div>
            </div>

            <div class="mb-3">
                <label for="Comprador" class="form-label">Comprador:</label>
                <InputText @bind-Value="compras.Comprador" class="form-control" />
                <ValidationMessage For="@(() => compras.Comprador)" />
            </div>

            <div class="mb-3">
                <label for="Vendedor" class="form-label">Vendedor:</label>
                <InputText @bind-Value="compras.Vendedor" class="form-control" />
                <ValidationMessage For="@(() => compras.Vendedor)" />
            </div>


            <fieldset class="border-success border border-1">
                <h3>Productos</h3>
                <div>
                    <div class="row">
                        <div class="col-3">
                            <label>Productos</label>
                            <div class="input-group mb-3">
                                <InputSelect class="form-select" @bind-Value="productoSeleccionado">
                                    <option value="0" disabled selected>Seleccione un producto</option>
                                    @foreach (var producto in Lista_Productos)
                                    {
                                        <option value="@producto.ProductoId">@producto.Nombre</option>
                                    }
                                </InputSelect>
                            </div>
                        </div>

                        <div class="col-3">
                            <label>Cantidad</label>
                            <div class="input-group mb-3">
                                <InputNumber @bind-Value="compraDetalle.UnidadUtilizada" class="form-control"></InputNumber>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-3">
                                <label>Precio: </label>
                                <div class="input-group mb-3">
                                    <InputNumber @bind-Value="compraDetalle.Precio" class="form-control"></InputNumber>
                                </div>
                            </div>

                            <div class="col">
                                <InputCheckbox class="form-check-input" type="checkbox" id="checkboxNoLabel" @bind-Value="compras.Vendido" aria-label="..."></InputCheckbox>
                                <label class="form-check-label" for="compraVendida">
                                    Compra Vendida
                                </label>
                                <ValidationMessage For="@(() => compra.Vendido)" />
                            </div>

                        </div>

                        <div class="col">
                            <button type="button" @onclick="AgregarDetalle" class="btn btn-outline-primary"><i class="bi bi-plus">Agregar</i></button>
                        </div>


                    </div>

                    <br>
                    <table class="table table-bordered table-light m-1">
                        <thead class="thead">
                            <tr class="table">
                                <th>Producto Id</th>
                                <th>Cantidad</th>
                                <th>Precio</th>
                            </tr>
                        </thead>

                        <tbody>
                            @foreach (var trabajoDetalles in Lista_CompraDetalle)
                            {
                                <tr>
                                    <td>@trabajoDetalles.ProductoId</td>
                                    <td>@trabajoDetalles.UnidadUtilizada</td>
                                    <td>@trabajoDetalles.Precio</td>
                                    <td><button @onclick="@(() => RemoverDetalle(trabajoDetalles))" class="btn btn-outline-danger" type="button"><i class="oi oi-trash">Eliminar</i></button></td>
                                </tr>
                            }
                        </tbody>

                    </table>

                </div>
            </fieldset>

        </div>

        <div class="card-footer bg-light d-flex justify-content-center mt-3">
            <div class="btn-group">
                <button type="button" class="btn btn-outline-primary ml-2" @onclick="Nuevo"><span class="bi bi-plus"></span> Nuevo </button>
                <button type="submit" class="btn btn-outline-success ml-2"><span class="bi bi-check-circle-fill"></span> Guardar </button>
                <a type="button" href="/Index" class="btn btn-outline-danger"><span class="bi bi-arrow-bar-left"></span> Retroceder </a>
            </div>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public int CompraId { get; set; }
    public Compras compras { get; set; } = new Compras();
    private bool Existe = false;
    public int productoSeleccionado { get; set; }
    public ComprasDetalle compraDetalle { get; set; } = new ComprasDetalle();
    public List<ComprasDetalle> Lista_CompraDetalle { get; set; } = new List<ComprasDetalle>();
    public List<Productos> Lista_Productos { get; set; } = new List<Productos>();


    protected override async Task OnInitializedAsync()
    {
        Lista_CompraDetalle = await compraService.ListarComprasDetalle(CompraId);
        Lista_Productos = await compraService.GetProductos();

        compras.CompraId = CompraId;
        await Buscar();

    }

    public async Task Buscar()
    {
        Existe = false;
        var CotizacionE = await compraService.Buscar(compras.CompraId);

        if (CotizacionE != null)
        {
            compras = CotizacionE;
        }
        else
        {
            Nuevo();
        }
    }

    public void Nuevo()
    {
        compras = new Compras();
        Existe = false;
    }

    public async Task Guardar()
    {
        compras.comprasDetalles = Lista_CompraDetalle;
        var guardo = await compraService.Guardar(compras);
        if (guardo)
        {
            Nuevo();
        }
    }

    public async Task Eliminar()
    {
        var eliminado = await compraService.Eliminar(compras.CompraId);
        Nuevo();
    }


    public void AgregarDetalle()
    {
        var seleccionProducto = Lista_Productos
        .FirstOrDefault(p => p.ProductoId == productoSeleccionado);

        if (seleccionProducto != null && comprasDetalle.UnidadUtilizada > 0)
        {
            comprasDetalle.Precio = seleccionProducto.Precio;

            var detalleNuevo = new ComprasDetalle
                {
                    ProductoId = seleccionProducto.ProductoId,
                    UnidadUtilizada = comprasDetalle.UnidadUtilizada,
                    Precio = seleccionProducto.Precio
                };



            Lista_CompraDetalle.Add(detalleNuevo);
            comprasDetalle = new ComprasDetalle();
            productoSeleccionado = 0;
        }
    }

    public async Task RemoverDetalle(ComprasDetalle detalleRemover)
    {

        var detalleEliminado = await compraService.EliminarDetalle(detalleRemover.DetalleId);

        Lista_CompraDetalle.Remove(detalleRemover);

        productoSeleccionado = detalleRemover.ProductoId;
        comprasDetalle.UnidadUtilizada = detalleRemover.UnidadUtilizada;
        comprasDetalle.Precio = detalleRemover.Precio;
    }

}
