@page "/Index/Ventas/"
@rendermode InteractiveServer
@inject VentaServices ventaService

<Toasts class="p-3" AutoHide="true" Delay="4000" Placement="ToastsPlacement.TopRight" />

<EditForm Model="ListaVentas" class="border shadow-lg p-3 rounded">

    <div class="card-header bg-primary text-white text-center py-2 rounded">
        <h3 style="font-weight: bold;" class="mb-0 font-weight-bold">Consulta ventas</h3>
    </div>
    <div class="card-body">

        <div class="row mb-3 align-items-end">
            <div class="col-md-3">
                <label for="Filtro" class="form-label">Filtrar por:</label>
                <select @bind="filtro" class="form-select">
                    <option value="id">ID</option>
                    <option value="comprador">Comprador</option>
                    <option value="vendedor">Vendedor</option>
                    <option value="total">Total</option>
                </select>
            </div>
            <div class="col-md-6">
                <label for="ValorFiltro" class="form-label">Busqueda:</label>
                <div class="input-group">
                    <input @bind="valorFiltro" class="form-control" placeholder="Buscar" />
                    <button @onclick="Buscar" class="btn btn-outline-primary" type="button">
                        <span class="bi bi-search"></span> Buscar
                    </button>

                </div>
            </div>
            <div class="col-md-3 text-end">
                <a href="/Create/Ventas/" class="btn btn-success" type="button"><span class="bi bi-floppy"></span> Crear </a>
            </div>

        </div>
    </div>
    <table class="table table-bordered text-center">
        <thead class="bg-primary text-white">
            <tr>
                <th>ID de Venta</th>
                <th>Comprador</th>
                <th>Vendedor</th>
                <th>Total</th>
                <th>Detalle</th>
                <th>Editar</th>
                <th>Devoluciones</th>                
                <th>Eliminar</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var venta in ListaVentas)
            {
                <tr>
                    <td>@venta.VentaId</td>
                    <td>@venta.Comprador</td>
                    <td>@venta.Vendedor</td>
                    <td>@venta.Total</td>

                    <td>
                        <a class="btn btn-outline-primary" href="/Details/Ventas/@venta.VentaId">
                            <span class="bi bi-card-heading fs-5"></span>
                        </a>
                    </td>
                    <td>
                        <a class="btn btn-outline-success" href="/Edit/Ventas/@venta.VentaId">
                            <span class="bi bi-pencil fs-5"></span>
                        </a>
                    </td>
                    <td>
                        <a class="btn btn-outline-success" href="/DevolucionesPage/@venta.VentaId">
                            <span class="bi bi-pencil fs-5"></span>
                        </a>
                    </td>

                    <td>
                        <a class="btn btn-outline-danger" href="/Delete/Ventas/@venta.VentaId">
                            <span class="bi bi-trash fs-5"></span>
                        </a>
                    </td>


                </tr>


            }
        </tbody>
    </table>
</EditForm>
@code {
    public Ventas ventas = new Ventas();

    public List<Ventas> ListaVentas = new List<Ventas>();

    private string filtro { get; set; } = "Id";
    private string valorFiltro { get; set; } = "";

    protected override async Task OnInitializedAsync()
    {
        ListaVentas = await ventaService.Listar(t => true);
    }

    public async Task Guardar()
    {
        var guardo = await ventaService.Guardar(ventas);
    }

    private async Task Buscar()
    {
        if (valorFiltro.Trim() != "")
        {
            if (filtro == "id" && int.TryParse(valorFiltro, out int VentaId))
            {
                ListaVentas = await ventaService.Listar(v => v.VentaId == VentaId);
            }
            else if (filtro == "comprador")
            {
                ListaVentas = await ventaService.Listar(v => v.Comprador == valorFiltro);
            }
            else if (filtro == "vendedor")
            {
                ListaVentas = await ventaService.Listar(v => v.Vendedor == valorFiltro);
            }
            else if (filtro == "total" && int.TryParse(valorFiltro, out int Total))
            {
                ListaVentas = await ventaService.Listar(v => v.Total == Total);
            }
        }
        else
        {
            ListaVentas = await ventaService.Listar(t => true);
        }
    }
}
